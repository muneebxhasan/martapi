services:
  product_service:
    build:
      context: ./product
      dockerfile: Dockerfile.dev
    volumes:
      - ./product:/code
    depends_on:
      - product_postgres_db
      - broker
    ports:
      - "8000:8000"

  inventory_service:
    build:
      context: ./inventory
      dockerfile: Dockerfile.dev
    volumes:
      - ./inventory:/code
    depends_on:
      - inventory_postgres_db
      - broker
    ports:
      - "8002:8000"

  order_service:
    build:
      context: ./order
      dockerfile: Dockerfile.dev
    volumes:
      - ./order:/code
    depends_on:
      - order_postgres_db
      - broker
    ports:
      - "8003:8000"

  user_service:
    build:
      context: ./UserService
      dockerfile: Dockerfile.dev
    volumes:
      - ./UserService:/code
    depends_on:
      - user_auth_postgres_db
      - broker
    ports:
      - "8004:8000"

  notification_service:
    build:
      context: ./notification
      dockerfile: Dockerfile.dev
    volumes:
      - ./notification:/code
    depends_on:
      - notification_postgres_db
      - broker
    ports:
      - "8005:8000"

  payment_service:
    build:
      context: ./payment
      dockerfile: Dockerfile.dev
    volumes:
      - ./payment:/code
    depends_on:
      - payment_postgres_db
      - broker
    ports:
      - "8006:8000"

  product_postgres_db:
    image: postgres:latest
    restart: always
    container_name: ProductCont
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=product_postgres_db
    ports:
      - "5433:5432"
    volumes:
      - product_postgres_db:/var/lib/postgresql/data

  inventory_postgres_db:
    image: postgres:latest
    restart: always
    container_name: InventoryCont
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=inventory_postgres_db
    ports:
      - "5434:5432"
    volumes:
      - inventory_postgres_db:/var/lib/postgresql/data

  order_postgres_db:
    image: postgres:latest
    restart: always
    container_name: OrderCont
    environment:
      - POSTGRES_USER=muneeb
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=order_postgres_db
    ports:
      - "5435:5432"
    volumes:
      - order_postgres_db:/var/lib/postgres/data

  user_auth_postgres_db:
    image: postgres:latest
    restart: always
    container_name: UserCont
    environment:
      - POSTGRES_USER=muneeb
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=user_auth_postgres_db
    ports:
      - "5436:5432"
    volumes:
      - user_auth_postgres_db:/var/lib/postgres/data

  notification_postgres_db:
    image: postgres:latest
    restart: always
    container_name: notificationCont
    environment:
      - POSTGRES_USER=muneeb
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=notification_postgres_db
    ports:
      - "5437:5432"
    volumes:
      - notification_postgres_db:/var/lib/postgres/data

  payment_postgres_db:
    image: postgres:latest
    restart: always
    container_name: PaymentCont
    environment:
      - POSTGRES_USER=muneeb
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=payment_postgres_db
    ports:
      - "5438:5432"
    volumes:
      - payment_postgres_db:/var/lib/postgres/data

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

volumes:
  product_postgres_db:
    driver: local
  inventory_postgres_db:
    driver: local
  order_postgres_db:
    driver: local
  user_auth_postgres_db:
    driver: local
  notification_postgres_db:
    driver: local
  payment_postgres_db:
    driver: local

networks:
  default:
    driver: bridge
